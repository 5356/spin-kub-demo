apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: nginx
    stack: prod
  name: nginx-deployment-prod
  namespace: default
spec:
  progressDeadlineSeconds: 600
<<<<<<< HEAD:nginx.yaml
  replicas: 2
=======
  replicas: 1
>>>>>>> d253c6dff21e74489687e32d28286c4e4c417465:content/manifests/nginx.yaml
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
<<<<<<< HEAD:nginx.yaml
=======
        ver: ${parameters["ci_version"]}
>>>>>>> d253c6dff21e74489687e32d28286c4e4c417465:content/manifests/nginx.yaml
    spec:
      containers:
      - image: nginx:1.7.9
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
    stack: prod
  name: nginx-prod
  namespace: default
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  sessionAffinity: None
  type: NodePort
